import pandas as pd
import numpy as np
import requests

# 1) OECD 諸国の ISO3 リスト
oecd_iso3 = [
    'AUS','AUT','BEL','CAN','CHL','CZE','DEU','DNK','EST','ESP',
    'FIN','FRA','GBR','GRC','HUN','IRL','ISL','ISR','ITA','JPN',
    'KOR','LVA','LTU','LUX','MEX','NLD','NOR','NZL','POL','PRT',
    'SVK','SVN','SWE','TUR','USA'
]

# 2) 世界銀行 API から R&D 投資比率 (1990–2019)
resp = requests.get(
    "http://api.worldbank.org/v2/country/" + ";".join(oecd_iso3) +
    "/indicator/GB.XPD.RSDV.GD.ZS?date=1990:2019&format=json&per_page=20000"
)
df_rd = pd.json_normalize(resp.json()[1])[['countryiso3code','date','value']]
df_rd.columns        = ['iso3','year','rd_pct_gdp']
df_rd['year']        = df_rd['year'].astype(int)
df_rd['rd_pct_gdp']  = pd.to_numeric(df_rd['rd_pct_gdp'], errors='coerce')

# 3) PWT 10.0 の読み込みと OECD 諸国の抽出
pwt = pd.read_stata("https://www.rug.nl/ggdc/docs/pwt100.dta")
vars_pwt = ['countrycode','year','rgdpo','cn','emp','avh','hc','labsh']

df = (
    pwt[vars_pwt]
      .rename(columns={'countrycode':'iso3'})
      .query("1990 <= year <= 2019 and iso3 in @oecd_iso3")
      .copy()
)

# 4) R&D 投資を資本ストックに加える & 基本変数の生成
df = df.merge(df_rd, on=['iso3','year'], how='left')
df['I']        = df['rd_pct_gdp'] / 100 * df['rgdpo']
df['K_total']  = df['cn'] + df['I']
df['L']        = df['emp'] * df['avh']
df['alpha']    = 1 - df['labsh']
df['lnY']      = np.log(df['rgdpo'])
df['lnK']      = np.log(df['K_total'])
df['lnL']      = np.log(df['L'])
df['lnhc']     = np.log(df['hc'])
df['lnA']      = (
    df['lnY']
    - df['alpha'] * df['lnK']
    - (1 - df['alpha']) * (df['lnL'] + df['lnhc'])
)

# 5) 年次成長率・寄与度の計算
df = df.sort_values(['iso3','year'])
df[['dlnY','dlnK','dlnL','dlnhc','dlnA']] = (
    df.groupby('iso3')[['lnY','lnK','lnL','lnhc','lnA']].diff()
)
df['cap_deep'] = df['alpha'] * df['dlnK']
df['tfp_g']    = df['dlnA']

# 6) 国別に成長率を算術平均 → 100倍して％表示
metrics = (
    df.groupby('iso3')
      .agg(
          Growth_Rate       = ('dlnY',   'mean'),
          TFP_Growth        = ('tfp_g',  'mean'),
          Capital_Deepening = ('cap_deep','mean'),
      )
      .assign(
          Growth_Rate       = lambda x: x['Growth_Rate']       * 100,
          TFP_Growth        = lambda x: x['TFP_Growth']        * 100,
          Capital_Deepening = lambda x: x['Capital_Deepening'] * 100,
          TFP_Share         = lambda x: x['TFP_Growth']        / x['Growth_Rate'],
          Capital_Share     = lambda x: x['Capital_Deepening'] / x['Growth_Rate'],
      )
      .reset_index()
      .rename(columns={'iso3':'Country'})
)

# 7) 幾何平均的な TFP 成長率を算出 → 100倍して％表示
geom = (
    df.groupby('iso3')['dlnA']
      .mean()                         
      .apply(lambda m: (np.exp(m) - 1) * 100)  # ％表示
      .round(2)
      .reset_index(name='TFP_Growth_geom')
      .rename(columns={'iso3':'Country'})
)

# 8) マージ & 小数点以下 2 桁に丸め
metrics = (
    metrics
    .merge(geom, on='Country', how='left')
    .round(2)
)

# 9) 全体平均行の追加（％表示のまま）
avg = metrics.mean(numeric_only=True).to_dict()
avg['Country'] = 'Average'
metrics = pd.concat([metrics, pd.DataFrame([avg])], ignore_index=True)

# 10) 結果表示
print("\nGrowth Accounting in OECD Countries: 1990–2019 (percent)")
print("="*90)
print(metrics.to_string(index=False))
