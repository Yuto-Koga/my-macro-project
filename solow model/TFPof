import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from fredapi import Fred

# --- STEP 1: FRED APIキー設定（あなたのキーに置き換えてください） ---
fred = Fred(api_key='46b4fbabbfe7ae0e8ca50e2ab83e48e2')

# --- STEP 2: 使用するFREDシリーズID ---
series_codes = {
    'y_pc': 'PCAGDPCHA646NWDB',        # Real GDP per capita (constant USD, UK)
    'K': 'RKNANPCHA666NRUG',         # Capital Stock at Constant National Prices for UK
    'working_age_pop': 'LFWA64TTCHQ647N',  # Working-age population (UK, 15-64)
    'employment_rate': 'LREM64TTCHQ156N'   # Employment rate (OECD definition)
}

# --- STEP 3: データ取得と整形 ---
data = {}
for var, code in series_codes.items():
    series = fred.get_series(code)
    if series.index.freq is None:
        series = series.resample('A').mean()  # 年次変換
    data[var] = series

df = pd.DataFrame(data).dropna()

# --- STEP 4: 就業者数 L = 労働人口 × 雇用率 ---
df['L'] = df['working_age_pop'] * df['employment_rate']

# --- STEP 5: 資本ストックを就業者1人あたりに変換 ---
df['k_per_worker'] = df['K'] / df['L']

# --- STEP 6: ログ変換 ---
df['log_y_pc'] = np.log(df['y_pc'])
df['log_k_per_worker'] = np.log(df['k_per_worker'])

# --- STEP 7: TFP計算（ソロー残差） ---
alpha = 0.42
df['log_A'] = df['log_y_pc'] - alpha * df['log_k_per_worker']

# --- STEP 8: 成長率（対数差分） ---
df['g_y'] = df['log_y_pc'].diff()
df['g_k'] = df['log_k_per_worker'].diff()
df['g_A'] = df['log_A'].diff()

df['tfp_contrib'] = df['g_A']
df['capital_contrib'] = alpha * df['g_k']

# --- STEP 9: 結果整形 ---
result = df[['g_y', 'g_A', 'g_k', 'tfp_contrib', 'capital_contrib']].dropna()
result.columns = ['GDP per capita Growth', 'TFP Growth', 'Capital Growth (per worker)', 'TFP Contribution', 'Capital Contribution']

# --- STEP 10: 可視化 ---
plt.figure(figsize=(12, 6))
plt.plot(result.index, result['GDP per capita Growth'], label='GDP per capita Growth')
plt.plot(result.index, result['TFP Growth'], label='TFP Growth')
plt.plot(result.index, result['Capital Growth (per worker)'], label='Capital Deepening (per worker)')
plt.title('UK Solow Growth Accounting (Employment-Adjusted Labor)')
plt.xlabel('Year')
plt.ylabel('Growth Rate (log difference)')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
