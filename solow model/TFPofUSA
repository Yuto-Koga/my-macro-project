import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from fredapi import Fred

# FRED APIキー（適宜差し替えてください）
fred = Fred(api_key='46b4fbabbfe7ae0e8ca50e2ab83e48e2')

# 使用するFREDシリーズID
series_codes = {
    'Y': 'GDP',          # Real GDP (UK)
    'K': 'RKNANPUSA666NRUG',          # Capital Stock (constant national prices)
    'working_age_pop': 'LFWA64TTUSQ647N',  # Working-age population (15–64)
    'employment_rate': 'LREM64TTUSQ156N'   # Employment rate (OECD, percent)
}

# データ取得と整形
data = {}
for var, code in series_codes.items():
    series = fred.get_series(code)
    if series.index.freq is None:
        series = series.resample('A').mean()  # 年次変換
    data[var] = series

df = pd.DataFrame(data).dropna()

# employment_rate (% なら除算)
if df['employment_rate'].max() > 1.0:
    df['employment_rate'] = df['employment_rate'] / 100.0

# 就業者数 L = 労働人口 × 雇用率
df['L'] = df['working_age_pop'] * df['employment_rate']

# 労働者あたりGDPと資本
df['y'] = df['Y'] / df['L']
df['k'] = df['K'] / df['L']

# ログ変換
df['log_y'] = np.log(df['y'])
df['log_k'] = np.log(df['k'])

# ソロー残差（TFP）
alpha = 0.42
df['log_A'] = df['log_y'] - alpha * df['log_k']

# 成長率（対数差分）
df['g_y'] = df['log_y'].diff()
df['g_k'] = df['log_k'].diff()
df['g_A'] = df['log_A'].diff()

df['tfp_contrib'] = df['g_A']
df['capital_contrib'] = alpha * df['g_k']

# 結果の整形
result = df[['g_y', 'g_A', 'g_k', 'tfp_contrib', 'capital_contrib']].dropna()
result.columns = ['GDP per worker Growth', 'TFP Growth', 'Capital Growth per worker', 'TFP Contribution', 'Capital Contribution']

# 可視化
plt.figure(figsize=(12, 6))
plt.plot(result.index, result['GDP per worker Growth'], label='GDP per worker Growth')
plt.plot(result.index, result['TFP Growth'], label='TFP Growth')
plt.plot(result.index, result['Capital Growth per worker'], label='Capital Deepening')
plt.title('UK Growth Accounting (per worker GDP and capital)')
plt.xlabel('Year')
plt.ylabel('Growth Rate (log difference)')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
